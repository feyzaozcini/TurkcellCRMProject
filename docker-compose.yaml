services:
  postgres:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=test
    volumes:
      - postgresql-volume:/var/lib/postgresql/data
    networks:
      - common
  config-server:
    build: ./configserver
    ports:
      - "8079:8079"
    networks:
      - common
  discovery-server:
    build: ./discoveryserver
    ports:
      - "8888:8888"
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
  gateway-server:
    build: ./gatewayserver
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
  account-service:
    build:
      context: ./accountservice
    ports:
      - "8087:8087"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  auth-server:
    build:
      context: ./authserver
    ports:
      - "8083:8083"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  catalog-service:
    build:
      context: ./catalogservice
    ports:
      - "8085:8085"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  customer-service:
    build:
      context: ./customerservice
    ports:
      - "8084:8084"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  invoice-service:
    build:
      context: ./invoiceservice
    ports:
      - "8090:8090"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  order-service:
    build:
      context: ./orderservice
    ports:
      - "8086:8086"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  basket-service:
    build:
      context: ./basketservice
    ports:
      - "8091:8091"
    depends_on:
      - discovery-server
      - config-server
      - gateway-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    networks:
      - common
    restart: on-failure
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - common
  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      networks:
        - common

  kafka-ui:
      image: provectuslabs/kafka-ui:latest
      depends_on:
        - kafka
      ports:
        - 8099:8080
      environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      networks:
        - common
volumes:
  postgresql-volume:
    name: postgresql-volume2
networks:
  common:
    driver: bridge